
================================
Installation
================================

To install the code run the install-devel.sh script:
    ./install-devel.sh
This will install both FVCode3D and its dependencies in ../fvcode3d-install.
To have the installation folder in <install dir> specify the option
--prefix=<install dir>, i.e.
    ./install-devel.sh --prefix=<install dir>

Unless told otherwise, the install script will also install all the needed packages:
cmake 2.8.12
blas 3.8.0
lapack 3.5.0
suitesparse 4.2.1
eigen 3.3.4 
If you wish to use an existing installation of one of the packages,
its location can be specified with the option --with-<package>=<path>, e.g.:
    ./install-devel.sh --prefix=<install dir> --with-cmake=/usr --with-blas=/usr
Pay attentation that the version 3.3.4 of the eigen is mandatory to use the iterative
preconditioned routines of the code.

For a full list of options:
    ./install-devel.sh --help

================================
How to run the program
================================

To run the program just type
	cd <install dir>/build/src
	./fvcode3d.exe
The data problem can be edited in the link <install dir>/build/src/data.txt and the available
meshes can be viewed in the link <install dir>/build/src/data.
To modify the forcing term, the boundary conditions and the properties (permeability, aperture, porosity)
the main program eniReservoir/FVCode3D/src/main.cpp must be properly modified. After that 
it's necessary to re-compile the code:
	cd <install dir>/build/src
	make
and then the code can be re-runned in the same previous way.

To run the examples:
	cd <install dir>/build/src/test
	cd <the test to be run>
	./<the test to be run>_test
where <the test to be run> = network1
							 network2
							 hexa
							 tet
E.g. to run hexa:
	cd <install dir>/build/src/test
	cd hexa
	./hexa_test
network1 and network2 are two examples with a complex network of fracture, hexa and tet are examples with
a theoretical solution in which the norm of the error for the pressure in bulk, pressure in fractures
and velocity is computed and printed out. The results are in .vtu format viewable with Paraview and
are the files sol_solution.vtu and sol_solution_f.vtu in <install dir>/build/src/test/<the test to be run>.
To see the data problem in <install dir>/build/src/test<test to be run> there's a file data.txt that can be modified
and then the example can be directly re-run. Whereas to change the properties of the example the file main.cpp 
in the source directory of the example, that is eniReservoir/FVCode3D/src/test/<the test to be run>,
has to be changed. Then it's necessary to re-compile the example
	cd <install dir>/build/src/test/<the test to be run>
	make
before re-running the example.

================================
How to generate the documentation
================================

The code is fully documented in Doxygen.
To build the doxygen documentation:
	cd FVCode3D/doc
	doxygen Doxyfile.in
	cd html
	<browser> index.html
where e.g. <browser> = firefox.








